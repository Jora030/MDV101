$date
	Sun Mar  9 15:32:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! compare $end
$var wire 16 " alu_out [15:0] $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 2 % mode [1:0] $end
$var reg 2 & op [1:0] $end
$scope module uut $end
$var wire 16 ' A [15:0] $end
$var wire 16 ( B [15:0] $end
$var wire 2 ) mode [1:0] $end
$var wire 2 * op [1:0] $end
$var wire 16 + logic_res [15:0] $end
$var wire 1 ! compare $end
$var wire 16 , arithmetic_res [15:0] $end
$var wire 16 - alu_out [15:0] $end
$scope module arith $end
$var wire 16 . A [15:0] $end
$var wire 16 / B [15:0] $end
$var wire 2 0 op [1:0] $end
$var reg 16 1 result [15:0] $end
$upscope $end
$scope module logic_ $end
$var wire 16 2 A [15:0] $end
$var wire 16 3 B [15:0] $end
$var wire 2 4 op [1:0] $end
$var reg 16 5 result [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 5
b0 4
b11 3
b101 2
b1000 1
b0 0
b11 /
b101 .
b1000 -
b1000 ,
b1 +
b0 *
b0 )
b11 (
b101 '
b0 &
b0 %
b11 $
b101 #
b1000 "
0!
$end
#10000
b110 "
b110 -
b110 ,
b110 1
b1110 +
b1110 5
b1 &
b1 *
b1 0
b1 4
b100 $
b100 (
b100 /
b100 3
b1010 #
b1010 '
b1010 .
b1010 2
#20000
b1111 "
b1111 -
b1111 +
b1111 5
b1000000001110 ,
b1000000001110 1
b0 &
b0 *
b0 0
b0 4
b1 %
b1 )
b111100001111 $
b111100001111 (
b111100001111 /
b111100001111 3
b11111111 #
b11111111 '
b11111111 .
b11111111 2
#30000
b111111111111 "
b111111111111 -
b1111000111110000 ,
b1111000111110000 1
b111111111111 +
b111111111111 5
b1 &
b1 *
b1 0
b1 4
#40000
