$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 # clk $end
  $var wire 1 $ reset $end
  $var wire 4 % key_input [3:0] $end
  $var wire 1 & locked $end
  $scope module key_lock_fsm $end
   $var wire 1 # clk $end
   $var wire 1 $ reset $end
   $var wire 4 % key_input [3:0] $end
   $var wire 1 & locked $end
   $var wire 3 ) LOCKED [2:0] $end
   $var wire 3 * S1 [2:0] $end
   $var wire 3 + S2 [2:0] $end
   $var wire 3 , S3 [2:0] $end
   $var wire 3 - S4 [2:0] $end
   $var wire 3 . S5 [2:0] $end
   $var wire 3 / UNLOCKED [2:0] $end
   $var wire 4 0 KEY1 [3:0] $end
   $var wire 4 0 KEY2 [3:0] $end
   $var wire 4 1 KEY3 [3:0] $end
   $var wire 4 2 KEY4 [3:0] $end
   $var wire 4 1 KEY5 [3:0] $end
   $var wire 4 3 KEY6 [3:0] $end
   $var wire 3 ' current_state [2:0] $end
   $var wire 3 ( next_state [2:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
1$
b0000 %
1&
b000 '
b000 (
b000 )
b001 *
b010 +
b011 ,
b100 -
b101 .
b110 /
b0011 0
b0101 1
b0010 2
b0110 3
#1
0$
b0011 %
b001 (
#2
#3
b0101 %
b000 (
#4
b0010 %
#5
b0101 %
#6
b0110 %
#7
#8
1$
#9
0$
b0011 %
b001 (
#10
#11
b0101 %
b000 (
#12
b1001 %
#13
b0101 %
#14
b0110 %
#15
